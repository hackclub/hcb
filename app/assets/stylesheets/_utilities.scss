@import 'variables';

.pointer {
  cursor: pointer;
}

.wait {
  cursor: wait;
}

.help {
  cursor: help;
}

.shrink-none {
  flex-shrink: 0;
}

.link-reset {
  color: inherit;
  text-decoration: none;
}

.medium {
  font-weight: 500;
}

.border,
.border-top,
.border-right,
.border-bottom,
.border-left {
  border-color: map-get($palette, smoke);
}

.px0 {
  padding-left: 0 !important;
  padding-right: 0 !important;
}
.py0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.mx0 {
  margin-left: 0 !important;
  margin-right: 0 !important;
}
.my0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

@media (min-width: 32em) {
  .md-px0 {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
  .md-py0 {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }

  .md-mx0 {
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
  .md-my0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }

  .md-ml-auto {
    margin-left: auto;
  }

  .md-mr-auto {
    margin-right: auto;
  }
}

.shade-yellow {
  background-color: rgba($yellow, 0.125);
}

.transaction--positive > td > span > span > span.success-dark.medium {
  font-weight: 400;
}

$shades: (
  red: rgba($red, 0.125),
  yellow: rgba($yellow, 0.125),
  green: rgba($green, 0.125),
  neutral: rgba($muted, 0.125),
);

@each $name, $value in $shades {
  .shade-#{'' + $name} {
    background-color: $value;
  }
}

.transaction--positive {
  @extend .shade-green;
}
.transaction--negative {
  @extend .shade-red;
}
.transaction--zero {
  @extend .shade-neutral;
}

@each $name, $value in $palette {
  .#{'' + $name} {
    color: $value;
  }
  a.#{'' + $name}:hover,
  a.#{'' + $name}:focus {
    color: darken($value, 10%);
  }

  .bg-#{'' + $name} {
    background-color: $value;

    &-important {
      background-color: $value !important;
    }
  }

  .border-#{'' + $name} {
    border-color: $value;

    &-important {
      border-color: $value !important;
    }
  }
}

.bg-transparent {
  background-color: transparent !important;
}

.secondary {
  color: map-get($palette, slate);
}

.b--warning {
  border-color: map-get($palette, warning);
}

.b--info {
  border-color: map-get($palette, info);
}

.b--muted {
  border-color: map-get($palette, muted);
}

.b--success {
  border-color: map-get($palette, success);
}

.b--primary {
  border-color: map-get($palette, primary);
}

.b--ai {
  border-color: map-get($palette, ai);
}

.w-50 {
  width: 50%;
}

.w-100 {
  width: 100%;
}

.h-100 {
  height: 100%;
}

@media screen and (min-width: 32em) {
  .md-w-50 {
    width: 50%;
  }

  .md-center {
    text-align: center;
  }

  .md-ml-auto {
    margin-left: auto;
  }

  .md-mr-auto {
    margin-right: auto;
  }
}

.break-none {
  word-break: keep-all;
}

.column {
  flex-basis: 0;
  flex-grow: 1;
  flex-shrink: 0;
}

details[open] .flip-when-open {
  transform: rotate(180deg);
}

table.strikeable {
  border-collapse: collapse;
}

tr.strikethrough td {
  position: relative;
}

tr.strikethrough td:before {
  content: ' ';
  position: absolute;
  left: 0;
  top: 50%;
  width: 100%;
  border-bottom: 1px solid #8492a6;
}

.scrollbar-hidden::-webkit-scrollbar {
  display: none;
}
