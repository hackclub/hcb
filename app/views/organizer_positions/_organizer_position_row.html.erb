<tr>
  <td><%= organizer_position.created_at.strftime("%b %d, %Y") %></td>
  <td>
    <%= user_mention organizer_position.user %>
  </td>
  <td><%= organizer_position.role.humanize %></td>
  <td>
    <%= copy_to_clipboard(organizer_signed_in? ? organizer_position.user.email : "user@example.com", class: "inline-flex items-center g1 line-height-0") do %>
      <%= inline_icon("email", size: 20) %>
      <%= organizer_signed_in? ? organizer_position.user.email : "Hidden" %>
    <% end %>
    <% if auditor_signed_in? %>
      <p class="warning m0">
        <%= copy_to_clipboard(organizer_position.user.phone_number, class: "inline-flex items-center g1 line-height-0") do %>
          <%= inline_icon("message-simple", size: 20) %>
          <%= organizer_position.user.phone_number %>
        <% end %>
      </p>
    <% end %>
  </td>
  <td>
    <div class="flex items-center gap-4 justify-end">
    <% if admin_signed_in? %>
      <div class="line-height-0 tooltipped tooltipped--w" aria-label="<%= (organizer_position.organizer_position_invite.organizer_position_contract.present? ? organizer_position.organizer_position_invite.organizer_position_contract.signed? ? "Contract signee" : "Pending signature, click to void this contract" : "No contract signature") %>">
        <div class="warning">
          <% if organizer_position.organizer_position_invite.organizer_position_contract&.signed? %>
            <%= link_to organizer_position.organizer_position_invite.organizer_position_contract.document || event_documents_path(event: organizer_position.event), class: "success", data: { turbo_frame: "_top" } do %>
              <%= inline_icon("docs-positive", size: 24) %>
            <% end %>
          <% elsif organizer_position.organizer_position_invite.organizer_position_contract&.present? %>
            <%= link_to void_organizer_position_contract_path(organizer_position.organizer_position_invite.organizer_position_contract), class: "primary", data: { turbo_confirm: "Are you sure you want to void this contract?", turbo_method: :POST } do %>
              <%= inline_icon("clock", size: 24) %>
            <% end %>
          <% else %>
            <%= link_to "#", class: "warning", data: { behavior: "modal_trigger", modal: "send_contract_#{organizer_position.organizer_position_invite.id}" } do %>
              <%= inline_icon("docs-negative", size: 24) %>
            <% end %>
            <section class="modal modal--scroll bg-snow" data-behavior="modal" role="dialog" id="send_contract_<%= organizer_position.organizer_position_invite.id %>">
              <%= modal_header "Send a contract" %>
              <%= render "organizer_position_contract/form", organizer_position_contract: OrganizerPosition::Contract.new(organizer_position_invite_id: organizer_position.organizer_position_invite.id) %>
            </section>
          <% end %>
        </div>
      </div>
    <% end %>
    <% if admin_signed_in? %>
      <div class="tooltipped tooltipped--s" aria-label="Edit user's settings">
        <%= pop_icon_to "controls", edit_user_path(organizer_position.user.slug), data: { turbo_frame: "_top" }, class: "admin-tools rounded-full overflow-hidden" %>
      </div>
      <% unless organizer_position.user == current_user || current_session&.impersonated? %>
        <div class="tooltipped tooltipped--s" aria-label="Impersonate user">
          <%= pop_icon_to "spy", impersonate_user_path(id: organizer_position.user.id, return_to: request.url), data: { turbo_method: "post", turbo_frame: "_top" }, class: "admin-tools rounded-full overflow-hidden" %>
        </div>
      <% end %>
    <% end %>
    <% if policy(organizer_position).view_allowances? && Flipper.enabled?(:spending_controls_2024_06_03, @event) %>
      <%= pop_icon_to "payment", event_organizer_position_spending_controls_path(organizer_position_id: organizer_position) %>
    <% end %>
    <% if policy(organizer_position).destroy? %>
      <%= pop_icon_to "member-remove",
                      organizer_path(organizer_position),
                      class: "error",
                      data: {
                        turbo_frame: "_top",
                        turbo_method: :DELETE,
                        turbo_confirm: "This will revoke their access to this organization. Their cards will be permanently canceled.",
                      } %>
    <% elsif policy(organizer_position.organizer_position_deletion_requests.build).new? %>
      <%= pop_icon_to "member-remove",
                      new_event_organizer_position_remove_path(organizer_position_id: organizer_position.user.slug),
                      class: "error",
                      data: {
                        turbo_frame: "_top",
                        turbo_method: :GET
                      } %>
    <% end %>
    </div>
  </td>
</tr>
